//# 3. Iterator class (correct class name and logic)
class SLLIterator:
    def __init__(self, start):
        self.current = start

    def __iter__(self):
        return self

    def __next__(self):
        if not self.current:
            raise StopIteration
        data = self.current.item
        self.current = self.current.next
        return data

// # 4. Driver code
mylist = SLL()
mylist.insert_at_start(20)
mylist.insert_at_start(10)
mylist.insert_at_start(30)
mylist.insert_after(mylist.search(20), 25)

mylist.print_list()  # Output: 30 10 20 25
print()
mylist.delete_item(20)
mylist.print_list()  # Output: 30 10 25
print()
for x in mylist:
    print(x, end=' ')  # Output: 30 10 25
print()
